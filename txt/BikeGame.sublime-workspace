{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Windo",
				"WindowWidth"
			],
			[
				"Window",
				"WindowWidth"
			],
			[
				"Wind",
				"WindowHeight"
			],
			[
				"Winod",
				"WindowWidth"
			],
			[
				"window",
				"WindowWidth"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#pragma once\n#include <iostream>\n#include <fstream>\n#include <string>\n#include <sstream>\n#include <stdlib.h>\n#include <vector>\n#include <SDL2/SDL.h>\n#include \"ScreenInfo.h\"\n//#include \"Init.h\"\n//#include \"MediaManager.hpp\"\n//int WindowWidth, WindowHeight;\nusing namespace std;\n\nclass Sprite{\nprotected:\n  bool dead;\n  SDL_Renderer *screen;\n  SDL_Rect dest;http://askubuntu.com/questions/56155/how-can-i-change-brightness-through-terminal\n    \n  int totalTime;\n  int screenW, screenH;\n  float ax, ay, vx, vy, x, y, t;\n    \n  vector<SDL_Texture *> bitmapTextures;\n  vector<int> timeTextures;\n    \npublic:\n  Sprite(SDL_Renderer *newScreen, int newScreenW, int newScreenH){\n    screen=newScreen;\n    screenW=newScreenW;\n    screenH=newScreenH;\n    dead=false;\n  }\n  bool isDead(){\n    return dead;\n  }\n  void kill(){\n    dead=true;\n  }\n  float getVelocity(){\n    return vx*vx+vy*vy;\n  }\n  bool contains(int xo, int yo){\n    return dest.x<=xo && xo<=dest.x+dest.w && \n    dest.y<=yo && yo<=dest.y+dest.h;\n  }\n  bool collidesWith(Sprite *other){\n    return contains(other->dest.x, other->dest.y) || \n    contains(other->dest.x+other->dest.w, other->dest.y) || \n    contains(other->dest.x, other->dest.y+other->dest.h) || \n    contains(other->dest.x+other->dest.w, other->dest.y+other->dest.h);\n  }\n  virtual void read(string file){\n    SDL_Surface *bitmapSurface;\n    ifstream in(file.c_str());\n    string path;\n    int n;\n    in>>n>>path;\n    for(int i=0;i<n;i++){\n      string filename;\n      int time;\n      stringstream s;\n      in>>filename>>time;\n      s<<path<<\"/\"<<filename;\n      \n      bitmapSurface= SDL_LoadBMP(s.str().c_str());\n      timeTextures.push_back(time);\n      totalTime+=time;\n      \n      int WhiteKey=SDL_MapRGB(bitmapSurface->format, 255, 255, 255);\n      SDL_SetColorKey(bitmapSurface, SDL_TRUE, WhiteKey);\n      SDL_Texture *bitmapText;\n      bitmapText=SDL_CreateTextureFromSurface(screen, bitmapSurface);\n      bitmapTextures.push_back(bitmapText);\n      SDL_FreeSurface(bitmapSurface);  \n      //bitmapTextures.push_back(media.getImage(screen, s.str()));\n    }\n    t=(float)(rand()%1000);\n    ax=0.0;\n    ay=0.0;\n    //vx=rand()%20-1;\n    //vy=rand()%20-1;\n    vx = -95.0; // this attribute should beproportional to the background acceleration and/or velocity\n    vy = 80.0;\n    dest.x=0;\n    dest.y=0;  //480-height;\n    //dest.w=bitmapSurface->w;\n    //dest.h=bitmapSurface->h;\n    dest.w=2;\n    dest.h=12;\n    \n    x=rand()%(WindowWidth-dest.w);\n    y=rand()%(WindowHeight-dest.h);\n    //x=0;\n    //y=0;\n    in.close();\n  }\n  virtual void update(float dt){\n    if(dead) return;\n    t+=1000.0*dt;\n    vx+=ax*dt;\n    vy+=ay*dt;\n    x+=vx*dt;\n    y+=vy*dt;\n    if(x > screenW-dest.w || x < 0){\n      x = WindowWidth-20;\n      //vx =- vx;\n    }\n    if(y > screenH-dest.h || y < 0){\n      y = 0;\n      vy =- vy;\n    }\n    //dest.x=(int)x;\n    //dest.y=(int)y;\n  }\n  void draw(){\n    if(dead) return;\n    dest.x=(int)x;\n    dest.y=(int)y;\n    int ti=((int)t) % totalTime;\n    int time=0;\n    unsigned i;\n    for(i=0;i<bitmapTextures.size();i++){\n      time+=timeTextures[i];\n      if(ti<=time) break;\n    }\n    if(i>=bitmapTextures.size()) i=0;\n    SDL_RenderCopy(screen, bitmapTextures[i], NULL, &dest);\n  }\n  ~Sprite(){\n    for(unsigned i=0;i<bitmapTextures.size();i++){\n      SDL_DestroyTexture(bitmapTextures[i]);\n    }\n  }\n};\n",
			"file": "/home/harry/Desktop/bikeGame/sprite.hpp",
			"file_size": 3272,
			"file_write_time": 130711706500000000,
			"settings":
			{
				"buffer_size": 3353,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/harry/Desktop/bikeGame/background.hpp",
			"settings":
			{
				"buffer_size": 1436,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/harry/Desktop/bikeGame/init.cpp",
			"settings":
			{
				"buffer_size": 1114,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/harry/Desktop/bikeGame/main.cpp",
			"settings":
			{
				"buffer_size": 2786,
				"line_ending": "Unix"
			}
		},
		{
			"file": "background.txt",
			"settings":
			{
				"buffer_size": 22,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bike.txt",
			"settings":
			{
				"buffer_size": 132,
				"line_ending": "Unix"
			}
		},
		{
			"file": "BikeGame.sublime-project",
			"settings":
			{
				"buffer_size": 72,
				"line_ending": "Unix"
			}
		},
		{
			"file": "floor.txt",
			"settings":
			{
				"buffer_size": 24,
				"line_ending": "Unix"
			}
		},
		{
			"file": "rain.txt",
			"settings":
			{
				"buffer_size": 24,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/harry/Desktop/bikeGame/Makefile",
			"settings":
			{
				"buffer_size": 87,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/harry/Desktop/bikeGame/ScreenInfo.h",
			"settings":
			{
				"buffer_size": 204,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/harry/Desktop/bikeGame/bike.hpp",
			"settings":
			{
				"buffer_size": 1888,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/harry/Desktop/bikeGame/floor.hpp",
			"settings":
			{
				"buffer_size": 606,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/harry/Desktop/bikeGame",
		"/home/harry/Desktop/bikeGame/img",
		"/home/harry/Desktop/bikeGame/txt"
	],
	"file_history":
	[
		"/home/harry/Desktop/Test.d",
		"/home/harry/Desktop/bikeGame/background.hpp",
		"/home/harry/Desktop/bikeGame/mediamanager.cpp",
		"/home/harry/Desktop/bikeGame/bike.hpp"
	],
	"find":
	{
		"height": 61.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"12",
			"1280",
			"480"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/harry/Desktop/bikeGame/sprite.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3353,
						"regions":
						{
						},
						"selection":
						[
							[
								620,
								620
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2304.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/harry/Desktop/bikeGame/background.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1436,
						"regions":
						{
						},
						"selection":
						[
							[
								359,
								359
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1632.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/harry/Desktop/bikeGame/init.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1114,
						"regions":
						{
						},
						"selection":
						[
							[
								888,
								888
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 864.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/harry/Desktop/bikeGame/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2786,
						"regions":
						{
						},
						"selection":
						[
							[
								622,
								622
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 96.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "background.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22,
						"regions":
						{
						},
						"selection":
						[
							[
								22,
								22
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "bike.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 132,
						"regions":
						{
						},
						"selection":
						[
							[
								132,
								132
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "BikeGame.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 72,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "floor.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24,
						"regions":
						{
						},
						"selection":
						[
							[
								8,
								8
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "rain.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24,
						"regions":
						{
						},
						"selection":
						[
							[
								24,
								24
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/harry/Desktop/bikeGame/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 87,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/home/harry/Desktop/bikeGame/ScreenInfo.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 204,
						"regions":
						{
						},
						"selection":
						[
							[
								204,
								204
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/harry/Desktop/bikeGame/bike.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1888,
						"regions":
						{
						},
						"selection":
						[
							[
								101,
								101
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/home/harry/Desktop/bikeGame/floor.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 606,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 40.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "BikeGame.sublime-project",
	"replace":
	{
		"height": 76.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 336.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
